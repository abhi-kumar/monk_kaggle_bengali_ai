import os
import sys
sys.path.append("../../../monk/");
import psutil

from gluon_prototype import prototype



gtf = prototype(verbose=1);
gtf.Prototype("sample-project-1", "sample-experiment-1");



######################################################Dataset Params #################################################################
gtf.Dataset_Params(dataset_path="../../../monk/system_check_tests/datasets/dataset_cats_dogs_train", split=0.9,
        input_size=224, batch_size=16, shuffle_data=True, num_processors=3);
#################################################################################################################################################








########################################################### Transforms ####################################################
gtf.apply_random_horizontal_flip(train=True, val=True);
gtf.apply_normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225], train=True, val=True, test=True);
#################################################################################################################################################


############################################ Auxiliary Functions - List all available transforms #########################################
gtf.List_Transforms()
######################################################################################################################################








########################################################## Set Dataset ###################################################################
gtf.Dataset();
##########################################################################################################################################






######################################################Model Params #################################################################
gtf.Model_Params(model_name="resnet18_v1", freeze_base_network=True, use_gpu=True, use_pretrained=True);
##########################################################################################################################################


############################################ Auxiliary Functions - List all available models #########################################
gtf.List_Models();
######################################################################################################################################








#################################################   Apply additional layers to model ####################################################################
gtf.append_dropout(probability=0.1);
gtf.append_linear(final_layer=True);
######################################################################################################################################


############################################ Auxiliary Functions - List all available layers and activations #########################################
gtf.List_Layers();
gtf.List_Activations();
######################################################################################################################################




########################################################## Set Model ###################################################################
gtf.Model();
##########################################################################################################################################


############################################ Auxiliary Functions - Freeze Layers #########################################
gtf.Freeze_Layers(num=10);
######################################################################################################################################





########################################################## Training Params ###################################################################
gtf.Training_Params(num_epochs=2, display_progress=True, display_progress_realtime=True, 
        save_intermediate_models=True, intermediate_model_prefix="intermediate_model_", save_training_logs=True);
######################################################################################################################################





################################################ Set Optimizer #########################################################################
gtf.optimizer_adam(0.001);
#################################################################################################################################################


############################################ Auxiliary Functions - List all available optimizers #########################################
gtf.List_Optimizers();
######################################################################################################################################







################################################ Set Learning rate schedulers #################################################################
gtf.lr_fixed();
#################################################################################################################################################


############################################ Auxiliary Functions - List all available schedulers #########################################
gtf.List_Schedulers();
######################################################################################################################################








################################################ Set Loss #################################################################
gtf.loss_softmax_crossentropy()
#################################################################################################################################################


############################################ Auxiliary Functions - List all available losses #########################################
gtf.List_Losses();
######################################################################################################################################




gtf.Train();